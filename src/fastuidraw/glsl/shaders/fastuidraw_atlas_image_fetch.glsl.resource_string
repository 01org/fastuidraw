

/*
  Must have defined:
   - FASTUIDRAW_INDEX_TILE_SIZE: size of index tiles
   - FASTUIDRAW_COLOR_TILE_SIZE: size of color tiles

   - FASTUIDRAW_INDEX_ATLAS: usampler2DArray sampler for the index atlas
   - FASTUIDRAW_ATLAS_COMPUTE_COORD: name of the function
 */


void
FASTUIDRAW_ATLAS_COMPUTE_COORD(in vec2 punnormalized_index_tex_coord,
                               in uint pindex_layer,
                               in uint pnum_levels,
                               in uint slack,
                               out vec2 return_value_unnormalized_texcoord_xy,
                               out uint return_value_layer)
{
  uint index_layer = pindex_layer;
  vec2 unnormalized_index_tex_coord = punnormalized_index_tex_coord;
  uvec4 tile_id;
  vec2 color_atlas_texcoord_xy;
  ivec2 itexel_coordinate;


  itexel_coordinate = ivec2(unnormalized_index_tex_coord);
  tile_id = texelFetch(FASTUIDRAW_INDEX_ATLAS,
                       ivec3(itexel_coordinate, index_layer),
                       0);
  index_layer = tile_id.z + 256u * tile_id.w;

  for(uint i = 1u; i < pnum_levels; ++i)
    {
      vec2 index_tile_offset;
      vec2 texel_coordinate;

      unnormalized_index_tex_coord -= vec2(itexel_coordinate);
      index_tile_offset = unnormalized_index_tex_coord * float(FASTUIDRAW_INDEX_TILE_SIZE);
      texel_coordinate = index_tile_offset
        + vec2(tile_id.xy) * float(FASTUIDRAW_INDEX_TILE_SIZE);

      itexel_coordinate = ivec2(texel_coordinate);
      tile_id = texelFetch(FASTUIDRAW_INDEX_ATLAS,
                           ivec3(itexel_coordinate, index_layer),
                           0);
      index_layer = tile_id.z + 256u * tile_id.w;

      unnormalized_index_tex_coord = texel_coordinate;
    }

  /* at this point index_layer gives
     the layer into colorAtlas and
     tile_id gives which tile in
     the color atlas
  */
  vec2 tile_offset;
  uint subtile_image_size;

  subtile_image_size = uint(FASTUIDRAW_COLOR_TILE_SIZE);
  subtile_image_size -= 2u * slack;
  tile_offset = (unnormalized_index_tex_coord - vec2(itexel_coordinate)) * float(subtile_image_size);

  return_value_unnormalized_texcoord_xy = tile_offset //offset into tile
    + vec2(float(slack)) //slack added
    + vec2(tile_id.xy) * float(FASTUIDRAW_COLOR_TILE_SIZE); //location of tile

  return_value_layer = index_layer;
}
