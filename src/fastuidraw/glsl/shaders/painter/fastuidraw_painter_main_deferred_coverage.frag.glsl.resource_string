/*!
 * \file fastuidraw_painter_main_deferred_coverage.frag.glsl.resource_string
 * \brief file fastuidraw_painter_main_deferred_coverage.frag.glsl.resource_string
 *
 * Copyright 2018 by Intel.
 *
 * Contact: kevin.rogovin@intel.com
 *
 * This Source Code Form is subject to the
 * terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with
 * this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 *
 * \author Kevin Rogovin <kevin.rogovin@intel.com>
 *
 */

layout(location = 0) out float fastuidraw_deferred_coverage;

#ifndef FASTUIDRAW_PAINTER_CLIPPING_USE_GL_CLIP_DISTACE

  bvec2
  fastuidraw_apply_clipping(void)
  {
    bvec2 r;
    /* r.x indicates if the fragment is really clipped */
    r.x = (fastuidraw_clip_plane0 < 0.0 || fastuidraw_clip_plane1 < 0.0
	   || fastuidraw_clip_plane2 < 0.0  || fastuidraw_clip_plane3 < 0.0);
    /* r.y indicates if the fragment is more than one pixel from the clipping plane */
    float tol = -2.0 * fastuidraw_viewport_recip_pixels_magnitude;
    r.y = (fastuidraw_clip_plane0 < tol || fastuidraw_clip_plane1 < tol
	   || fastuidraw_clip_plane2 < tol  || fastuidraw_clip_plane3 < tol);
    return r;
  }

#endif


void
main(void)
{
  float v = 0.0;

  #ifndef FASTUIDRAW_PAINTER_CLIPPING_USE_GL_CLIP_DISTACE
  bvec2 clipped;
  clipped = fastuidraw_apply_clipping();
  #endif

  #ifndef FASTUIDRAW_PAINTER_CLIPPING_USE_GL_CLIP_DISTACE
  if (!clipped.y)
  #endif
    {
      v = fastuidraw_run_frag_shader(fastuidraw_frag_shader,
                                     fastuidraw_frag_shader_data_location);
    }

  #ifndef FASTUIDRAW_PAINTER_CLIPPING_USE_GL_CLIP_DISTACE
  if (clipped.x)
    {
      v = 0.0;
    }
  #endif

  fastuidraw_deferred_coverage = v;
}
