/*!
 * \file fastuidraw_painter_fill_aa_fuzz.vert.glsl.resource_string
 * \brief file fastuidraw_painter_fill_aa_fuzz.vert.glsl.resource_string
 *
 * Copyright 2018 by Intel.
 *
 * Contact: kevin.rogovin@intel.com
 *
 * This Source Code Form is subject to the
 * terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with
 * this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 *
 * \author Kevin Rogovin <kevin.rogovin@intel.com>
 *
 */


vec4
fastuidraw_gl_vert_main(in uint sub_shader,
                        in uvec4 uprimary_attrib,
                        in uvec4 usecondary_attrib,
                        in uvec4 uint_attrib,
                        in uint shader_data_offset,
                        out int z_add)
{
  vec4 position_normal;
  vec3 clip_direction, clip_p;
  vec2 n, p;
  float dist, sgn;

  position_normal = uintBitsToFloat(uprimary_attrib);
  sgn = uintBitsToFloat(usecondary_attrib.x);

  if (abs(sgn) > 0.5)
    {
      position_normal.zw *= sgn;
      clip_p = fastuidraw_item_matrix * vec3(position_normal.xy, 1.0);
      n = fastuidraw_align_normal_to_screen(clip_p, position_normal.zw);
      clip_direction = fastuidraw_item_matrix * vec3(n, 0.0);
      dist = fastuidraw_local_distance_from_pixel_distance(1.0, clip_p, clip_direction);
      p = position_normal.xy + dist * n;
    }
  else
    {
      p = position_normal.xy;
    }

  fastuidraw_aa_fuzz = sgn;
  z_add = int(usecondary_attrib.y);

  return p.xyxy;
}
