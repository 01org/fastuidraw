/*!
 * \file fastuidraw_painter_brush_types.glsl.resource_string
 * \brief file fastuidraw_painter_brush_types.glsl.resource_string
 *
 * Copyright 2018 by Intel.
 *
 * Contact: kevin.rogovin@intel.com
 *
 * This Source Code Form is subject to the
 * terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with
 * this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 *
 * \author Kevin Rogovin <kevin.rogovin@intel.com>
 *
 */



struct fastuidraw_brush_image_data
{
  // size of the (sub)image in texels
  uvec2 image_size;

  // location within image of start of sub-image
  uvec2 image_start;

  //////////////////////////////////////////////////////////
  // only valid for images of type fastuidraw_image_on_atlas
  //
  /* slack in tiles, i.e. how many texel repeated
   * on each size of tile to facilitate filtering
   */
  uint slack;

  /* location of mater index tile for the image */
  vec3 master_index_tile_atlas_location_xyz;

  /* number of index tile lookups */
  uint number_index_lookups;

  ////////////////////////////////////////////
  // only valid for images taken from a handle
  uint bindless_handle_low, bindless_handle_hi;
};


struct fastuidraw_brush_gradient
{
  /* location on atlas in texels
   */
  vec2 color_stop_sequence_xy;

  /* just the length
   */
  float color_stop_sequence_length;

  /* start and end of gradients packed as usual floats
   */
  vec2 p0, p1;

  /* radial gradient values
   */
  float r0, r1;
};

struct fastuidraw_brush_repeat_window
{
  vec2 xy; //x-y position of window
  vec2 wh; //width and height of window
};


struct fastuidraw_brush_image_data_raw
{
  /* packed: Image::master_index_tile().xyz()
   */
  uint image_atlas_location_xyz;

  /* packed: Image::dimensions().xy() (or a sub-value for sub-imaging)

     NOTE: The formula to go from image coordinates to
           master index tile coordinates is given by:
              i + p / A
           where
              i = Image::master_index_tile().xy()
              p = image coordinates
              A = ( (TileSize - 2 * Slack) * pow(IndexTileSize, NumberIndexLookups - 1) )

           TileSize is given by FASTUIDRAW_IMAGE_ATLAS_COLOR_TILE_SIZE
           Slack comes from the shader_brush (it is packed into 2 bits)
           NumberIndexLookups is also packed into shader_brush (occupying 5 bits)
           IndexTileSize is given by (1 << FASTUIDRAW_IMAGE_ATLAS_INDEX_TILE_LOG2_SIZE),
                         note that then pow(IndexTileSize, NumberIndexLevels - 1) is same as
                         (1 << (FASTUIDRAW_IMAGE_ATLAS_INDEX_TILE_LOG2_SIZE * (NumberIndexLookups - 1) )
   */
  uint image_size_xy;

  /*
    offset of start rectangle for sub-image.
   */
  uint image_start_xy;

  /* image slack and number of index lookups needed
   */
  uint image_slack_number_lookups;
};

struct fastuidraw_brush_gradient_raw
{
  /* start and end of gradients packed as usual floats
   */
  vec2 p0, p1;

  /* packed:
     - bits [0 , 15] ColorStopSequenceOnAtlas::texel_location().x()
     - bits [16, 31] ColorStopSequenceOnAtlas::texel_location().y
   */
  uint color_stop_sequence_xy;

  /* just the length
   */
  uint color_stop_sequence_length;

  /* radial gradient values
   */
  float r0, r1;
};
